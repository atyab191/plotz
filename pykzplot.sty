\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{pykzplot}[2017/11/03]

\RequirePackage{tikz}
\RequirePackage{amsmath,amssymb,amsfonts}

\def\@pykzplot{%
  \pgfmathparse{\pykzplot@scalex*\pykzplot@scale}\edef\pykz@X{\pgfmathresult}%
  \pgfmathparse{\pykzplot@scaley*\pykzplot@scale}\edef\pykz@Y{\pgfmathresult}%
  \begin{tikzpicture}%
  [x=\pykzplot@scalex,y=\pykzplot@scaley,scale=\pykzplot@scale]%
    \pykzplot@background%
    \if\pykzplot@draft0\pykzplot@lines\fi%
    \pykzplot@foreground%
  \end{tikzpicture}%
}%

\newcommand{\pykzplot}{%
  \@ifstar\pykzplot@star\pykzplot@nostar%
}

\newcommand{\pykzplot@nostar}[1]{%
  \input{#1}%
  \def\pykzplot@scale{1}
  \def\pykzplot@draft{0}%
  \@pykzplot%
}

\newsavebox{\measure@pykzplot}
\newcounter{pykzplot@iter}
\newcommand{\pykzplot@star}[2]{%
  \input{#2}%
  \def\pykzplot@scale{1}%
  \def\pykzplot@draft{1}%
  \setcounter{pykzplot@iter}{1}
  \message{^^Jpykzplot*^^J}
  \def\iter{%
    \edef\pykzplot@scale@old{\pykzplot@scale}%
    \sbox\measure@pykzplot\@pykzplot%
    \pgfmathparse{\pykzplot@scale*#1/\wd\measure@pykzplot}%
    \edef\pykzplot@scale{\pgfmathresult}%
    %
    \let\next=\iter%
    %
    % Convergence?
    \pgfmathparse{\pykzplot@scale/\pykzplot@scale@old - 1}%
    \def\pykzplot@space{ }%
    \message{ \pykzplot@space iter \thepykzplot@iter:
      \pykzplot@scale@old\pykzplot@space%
      -> \pykzplot@scale\space%
      = \pgfmathresult^^J}% 
    \pgfmathparse{abs(\pgfmathresult) < 0.01}% 
    \if\pgfmathresult1%
      \let\next=\relax%
      \pgfmathparse{\pykzplot@scalex*\pykzplot@scale}\edef\pykz@X{\pgfmathresult}%
      \pgfmathparse{\pykzplot@scaley*\pykzplot@scale}\edef\pykz@Y{\pgfmathresult}%
      \message{ \pykzplot@space scale\pykzplot@space%
        = \pykz@X\pykzplot@space x \pykz@Y^^J}%
    \fi%
    % Max iter reached?
    \stepcounter{pykzplot@iter}%
    \ifnum\thepykzplot@iter>10%
      \let\next=\relax%
    \fi%
    %
    % Tail recursive call
    \next%
  }%
  \iter%
  \def\pykzplot@draft{0}%
  \@pykzplot%
}

\endinput
